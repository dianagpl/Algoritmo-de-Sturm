# -*- coding: utf-8 -*-
"""
Created on Fri Sep  3 11:28:58 2021

@author: uriel
"""

def derivar(polinomio):
    derivada=[0]
    n=len(polinomio)
    for i in range (1,n):
        derivada.append(polinomio[n-i]*(n-i))
    derivada.reverse()
    return derivada
       

def grado(pol):
    n=len(pol)-1
    grado=n
    for i in range (0,n+1):
        k=n-i
        if pol[k]!=0:
            break;
        grado-=1
    return grado

def div(pn,pN):
    dividendo=pN
    divisor=pn
    cociente=[0 for i in range (grado(pN)+1)]
    residuo = [0 for i in range (grado(pN)+1)]
    while grado(dividendo)>=grado(divisor):
        residuo = [0 for i in range (grado(pN)+1)]
        # print (divisor)
        # if divisor[grado(divisor)] != 0:
        cociente[grado(dividendo)-grado(divisor)]=dividendo[grado(dividendo)]/divisor[grado(divisor)]
        # else:
        #     print (divisor)
        
        for i in range (0,grado(pN)+1):
            k=grado(dividendo)-i
            residuo[k]=dividendo[k]-divisor[grado(divisor)-i]*cociente[k+i-grado(divisor)]
        dividendo=residuo
    
     
    return residuo




def prod(lista):
    n=len(lista)-1
    for i in range(n):
        if lista[i]!=0:
            lista[i]*=(-1)
    return lista

def division(a,b):
    return prod(div(a,b))

def raices( pol):
    p_2=derivar(pol)
    p_1=pol 
    p_r=pol
    # contador=1
    cadenas=[pol]
    while grado(p_r)!=0:
        p_r=division(p_2, p_1)
        cadenas.append(p_r)
        print (p_r)
        p_1=p_2
        p_2=p_r
        
    return cadenas

p0=[-2,1,0,-4,0,0,1]
d=raices(p0)

